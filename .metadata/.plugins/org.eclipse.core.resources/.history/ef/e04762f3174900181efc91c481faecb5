package com.lei.dto.lei;

import java.util.ArrayList;

import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonRootName;

import lombok.Getter;
import lombok.Setter;
/**
 * This class is used to store lei information.
 * @author neha.mehta
 *
 */

@XmlRootElement(name = "LeiInformation")
@JsonRootName(value = "LeiInformation")
@XmlAccessorType(XmlAccessType.NONE)
@JsonInclude(Include.NON_NULL)
public class LEIDTO {
	
	/*@Getter
	@Setter
	@XmlElement(name = "SERIALNO")
	@JsonProperty(value = "SERIALNO")
	private String serialNo;*/

	@Getter
	@Setter
	@XmlElement(name = "NAME")
	@JsonProperty(value = "NAME")
	private String name;
	
	
	/*@Getter
	@Setter
	@XmlElement(name = "LEGALNAME")
	@JsonProperty(value = "LEGALNAME")
	private String legalName;*/
	
	@Getter
	@Setter
	@XmlElement(name = "COUNTRY")
	@JsonProperty(value = "COUNTRY")
	private String country;
	
	@Getter
	@Setter
	@XmlElement(name = "LEICODE")
	@JsonProperty(value = "LEICODE")
	private String leiCode;
	
	@Getter
	@Setter
	@XmlElement(name = "MATCHINGSCORE")
	@JsonProperty(value = "MATCHINGSCORE")
	private String matchScore;
	
	@Getter
	@Setter
	@XmlElement(name = "STATUS")
	@JsonProperty(value = "STATUS")
	private String matchStatus;
	
	@Getter
	@Setter
	@XmlElement(name = "MATCHES")
	@JsonProperty(value = "MATCHES")
	private List<LEIDTO> matchList;
	
	public void addMatchElement(LEIDTO match){
		if(matchList==null){
			matchList  = new ArrayList<>();
		}
		matchList.add(match);
	}

	/*@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		LEIDTO other = (LEIDTO) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}*/
	
	
	
	
	
}
